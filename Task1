// Define pin numbers
const int trigPin = 11;     // Trigger pin for HC-SR04
const int echoPin = 10;    // Echo pin for HC-SR04
const int greenLed = 3;    // Green LED pin
const int yellowLed = 4;   // Yellow LED pin
const int redLed = 5;      // Red LED pin

void setup() {
  // Initialize serial communication
  Serial.begin(9600);
  
  // Initialize pin modes
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(greenLed, OUTPUT);
  pinMode(yellowLed, OUTPUT);
  pinMode(redLed, OUTPUT);
  pinMode(potPin, INPUT);
}
void loop() {
  long duration, distance;
  
  // Read the potentiometer value and map it to a distance threshold range
  int potValue = analogRead(potPin);
  int redThreshold = map(potValue, 0, 1023, 5, 15); // Adjusts the red threshold between 5 cm and 15 cm
  int yellowThreshold = map(potValue, 0, 1023, 15, 25);   // Adjusts the yellow threshold between 15 cm and 25 cm

  // Trigger the ultrasonic sensor
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delay(10);
  digitalWrite(trigPin, LOW);

  // Read the duration and calculate the distance
  duration = pulseIn(echoPin, HIGH);
  distance = (duration / 2) * 0.0343;
   // Print the distance and threshold for debugging
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.print(" cm, Red Threshold: ");
  Serial.print(redThreshold);
  Serial.print(" Yellow Threshold: ");
  Serial.println(yellowThreshold);

  // Control LEDs based on distance and threshold
  if (distance < redThreshold) {
    digitalWrite(redLed, HIGH);
    digitalWrite(yellowLed, LOW);
    digitalWrite(greenLed, LOW);
  } else if (distance >= redThreshold && distance < yellowThreshold) {
    digitalWrite(redLed, LOW);
    digitalWrite(yellowLed, HIGH);
    digitalWrite(greenLed, LOW);
  } else {
    digitalWrite(redLed, LOW);
    digitalWrite(yellowLed, LOW);
    digitalWrite(greenLed, HIGH);
  }
  
}

